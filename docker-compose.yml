version: '3.3'

services:
  app: &app
    build: .
    env_file:
      - docker-compose.env
      - docker-compose.local.env
    depends_on:
      - db
    restart: on-failure
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: >
      bash -c "python manage.py runserver 0.0.0.0:8000"

  init:
    <<: *app
    command: bash -c
      "python manage.py migrate &&
      python manage.py loaddata fixtures/*"
    ports: []
    depends_on:
      - app

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=db
    tmpfs:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit:
      hostname: rabbit
      image: rabbitmq:latest
      environment:
          - RABBITMQ_DEFAULT_USER=guest
          - RABBITMQ_DEFAULT_PASS=guest
      ports:
          - "5672:5672"
      healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "5672" ]
        interval: 5s
        timeout: 15s
        retries: 1

  celery:
    <<: *app
    command: >
      celery --app config.celery worker --loglevel=INFO -B -E
    ports: []
    depends_on:
      - app
